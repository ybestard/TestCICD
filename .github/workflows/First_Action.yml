# .github/workflows/simple-test.yml
name: Simple PlayMode Tests

# CuÃ¡ndo ejecutar
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Variables
env:
  UNITY_VERSION: 6000.2.1f1

jobs:
  test-playmode:
    name: Test PlayerHealth PlayMode
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      # 1. Descargar cÃ³digo
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      
      # 2. Ejecutar tests de PlayMode solamente
      - name: ðŸ§ª Run PlayMode Tests
        uses: game-ci/unity-test-runner@v4
        env:
          # Para licencia Personal - usar archivo .ulf
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          testMode: playmode
          artifactsPath: test-results
      
      # 3. Subir resultados (solo si quieres verlos)
      - name: ðŸ“„ Upload Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: PlayMode-Results
          path: test-results
          if-no-files-found: warn
      
      # 4. Mostrar resumen simple
      - name: âœ… Test Summary
        if: always()
        run: |
          echo "## ðŸŽ¯ PlayMode Tests Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tests de tu clase TestingPlayMode:" >> $GITHUB_STEP_SUMMARY
          echo "- TestPlayerHealthSystemPlayMode" >> $GITHUB_STEP_SUMMARY
          echo "- TestPlayerDeathPlayMode" >> $GITHUB_STEP_SUMMARY
          echo "- NewTestScriptSimplePasses" >> $GITHUB_STEP_SUMMARY
          echo "- NewTestScriptSyncPasses" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸŽ® **Sistema PlayerHealth validado en PlayMode!**" >> $GITHUB_STEP_SUMMARY
